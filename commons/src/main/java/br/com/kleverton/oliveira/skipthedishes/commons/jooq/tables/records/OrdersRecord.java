/*
 * This file is generated by jOOQ.
 */
package br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.records;


import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.Orders;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record4<Long, Long, Long, LocalDateTime> {

    private static final long serialVersionUID = 1977340088;

    /**
     * Setter for <code>skipthedishes.orders.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>skipthedishes.orders.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>skipthedishes.orders.id_account</code>.
     */
    public void setIdAccount(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>skipthedishes.orders.id_account</code>.
     */
    public Long getIdAccount() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>skipthedishes.orders.id_restaurant</code>.
     */
    public void setIdRestaurant(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>skipthedishes.orders.id_restaurant</code>.
     */
    public Long getIdRestaurant() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>skipthedishes.orders.date_order</code>.
     */
    public void setDateOrder(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>skipthedishes.orders.date_order</code>.
     */
    public LocalDateTime getDateOrder() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Orders.ORDERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Orders.ORDERS.ID_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Orders.ORDERS.ID_RESTAURANT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return Orders.ORDERS.DATE_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getIdAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getIdRestaurant();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component4() {
        return getDateOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getIdAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getIdRestaurant();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getDateOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value2(Long value) {
        setIdAccount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value3(Long value) {
        setIdRestaurant(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord value4(LocalDateTime value) {
        setDateOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrdersRecord values(Long value1, Long value2, Long value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Long id, Long idAccount, Long idRestaurant, LocalDateTime dateOrder) {
        super(Orders.ORDERS);

        set(0, id);
        set(1, idAccount);
        set(2, idRestaurant);
        set(3, dateOrder);
    }
}
