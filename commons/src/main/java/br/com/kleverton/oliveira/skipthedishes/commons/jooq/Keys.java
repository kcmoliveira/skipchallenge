/*
 * This file is generated by jOOQ.
 */
package br.com.kleverton.oliveira.skipthedishes.commons.jooq;


import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.Accounts;
import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.Orders;
import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.OrdersProducts;
import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.Products;
import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.Restaurants;
import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.records.AccountsRecord;
import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.records.OrdersProductsRecord;
import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.records.OrdersRecord;
import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.records.ProductsRecord;
import br.com.kleverton.oliveira.skipthedishes.commons.jooq.tables.records.RestaurantsRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>skipthedishes</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountsRecord, Long> IDENTITY_ACCOUNTS = Identities0.IDENTITY_ACCOUNTS;
    public static final Identity<OrdersRecord, Long> IDENTITY_ORDERS = Identities0.IDENTITY_ORDERS;
    public static final Identity<OrdersProductsRecord, Long> IDENTITY_ORDERS_PRODUCTS = Identities0.IDENTITY_ORDERS_PRODUCTS;
    public static final Identity<ProductsRecord, Long> IDENTITY_PRODUCTS = Identities0.IDENTITY_PRODUCTS;
    public static final Identity<RestaurantsRecord, Long> IDENTITY_RESTAURANTS = Identities0.IDENTITY_RESTAURANTS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountsRecord> KEY_ACCOUNTS_PRIMARY = UniqueKeys0.KEY_ACCOUNTS_PRIMARY;
    public static final UniqueKey<AccountsRecord> KEY_ACCOUNTS_USERNAME = UniqueKeys0.KEY_ACCOUNTS_USERNAME;
    public static final UniqueKey<OrdersRecord> KEY_ORDERS_PRIMARY = UniqueKeys0.KEY_ORDERS_PRIMARY;
    public static final UniqueKey<OrdersProductsRecord> KEY_ORDERS_PRODUCTS_PRIMARY = UniqueKeys0.KEY_ORDERS_PRODUCTS_PRIMARY;
    public static final UniqueKey<ProductsRecord> KEY_PRODUCTS_PRIMARY = UniqueKeys0.KEY_PRODUCTS_PRIMARY;
    public static final UniqueKey<RestaurantsRecord> KEY_RESTAURANTS_PRIMARY = UniqueKeys0.KEY_RESTAURANTS_PRIMARY;
    public static final UniqueKey<RestaurantsRecord> KEY_RESTAURANTS_RESTAURANTS_NAME_UINDEX = UniqueKeys0.KEY_RESTAURANTS_RESTAURANTS_NAME_UINDEX;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<OrdersRecord, AccountsRecord> ORDERS_IBFK_1 = ForeignKeys0.ORDERS_IBFK_1;
    public static final ForeignKey<OrdersRecord, RestaurantsRecord> ORDERS_IBFK_2 = ForeignKeys0.ORDERS_IBFK_2;
    public static final ForeignKey<OrdersProductsRecord, OrdersRecord> ORDERS_PRODUCTS_IBFK_1 = ForeignKeys0.ORDERS_PRODUCTS_IBFK_1;
    public static final ForeignKey<OrdersProductsRecord, ProductsRecord> ORDERS_PRODUCTS_IBFK_2 = ForeignKeys0.ORDERS_PRODUCTS_IBFK_2;
    public static final ForeignKey<ProductsRecord, RestaurantsRecord> PRODUCTS_IBFK_1 = ForeignKeys0.PRODUCTS_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountsRecord, Long> IDENTITY_ACCOUNTS = Internal.createIdentity(Accounts.ACCOUNTS, Accounts.ACCOUNTS.ID);
        public static Identity<OrdersRecord, Long> IDENTITY_ORDERS = Internal.createIdentity(Orders.ORDERS, Orders.ORDERS.ID);
        public static Identity<OrdersProductsRecord, Long> IDENTITY_ORDERS_PRODUCTS = Internal.createIdentity(OrdersProducts.ORDERS_PRODUCTS, OrdersProducts.ORDERS_PRODUCTS.ID);
        public static Identity<ProductsRecord, Long> IDENTITY_PRODUCTS = Internal.createIdentity(Products.PRODUCTS, Products.PRODUCTS.ID);
        public static Identity<RestaurantsRecord, Long> IDENTITY_RESTAURANTS = Internal.createIdentity(Restaurants.RESTAURANTS, Restaurants.RESTAURANTS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountsRecord> KEY_ACCOUNTS_PRIMARY = Internal.createUniqueKey(Accounts.ACCOUNTS, "KEY_accounts_PRIMARY", Accounts.ACCOUNTS.ID);
        public static final UniqueKey<AccountsRecord> KEY_ACCOUNTS_USERNAME = Internal.createUniqueKey(Accounts.ACCOUNTS, "KEY_accounts_username", Accounts.ACCOUNTS.USERNAME);
        public static final UniqueKey<OrdersRecord> KEY_ORDERS_PRIMARY = Internal.createUniqueKey(Orders.ORDERS, "KEY_orders_PRIMARY", Orders.ORDERS.ID);
        public static final UniqueKey<OrdersProductsRecord> KEY_ORDERS_PRODUCTS_PRIMARY = Internal.createUniqueKey(OrdersProducts.ORDERS_PRODUCTS, "KEY_orders_products_PRIMARY", OrdersProducts.ORDERS_PRODUCTS.ID);
        public static final UniqueKey<ProductsRecord> KEY_PRODUCTS_PRIMARY = Internal.createUniqueKey(Products.PRODUCTS, "KEY_products_PRIMARY", Products.PRODUCTS.ID);
        public static final UniqueKey<RestaurantsRecord> KEY_RESTAURANTS_PRIMARY = Internal.createUniqueKey(Restaurants.RESTAURANTS, "KEY_restaurants_PRIMARY", Restaurants.RESTAURANTS.ID);
        public static final UniqueKey<RestaurantsRecord> KEY_RESTAURANTS_RESTAURANTS_NAME_UINDEX = Internal.createUniqueKey(Restaurants.RESTAURANTS, "KEY_restaurants_restaurants_name_uindex", Restaurants.RESTAURANTS.NAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<OrdersRecord, AccountsRecord> ORDERS_IBFK_1 = Internal.createForeignKey(br.com.kleverton.oliveira.skipthedishes.commons.jooq.Keys.KEY_ACCOUNTS_PRIMARY, Orders.ORDERS, "orders_ibfk_1", Orders.ORDERS.ID_ACCOUNT);
        public static final ForeignKey<OrdersRecord, RestaurantsRecord> ORDERS_IBFK_2 = Internal.createForeignKey(br.com.kleverton.oliveira.skipthedishes.commons.jooq.Keys.KEY_RESTAURANTS_PRIMARY, Orders.ORDERS, "orders_ibfk_2", Orders.ORDERS.ID_RESTAURANT);
        public static final ForeignKey<OrdersProductsRecord, OrdersRecord> ORDERS_PRODUCTS_IBFK_1 = Internal.createForeignKey(br.com.kleverton.oliveira.skipthedishes.commons.jooq.Keys.KEY_ORDERS_PRIMARY, OrdersProducts.ORDERS_PRODUCTS, "orders_products_ibfk_1", OrdersProducts.ORDERS_PRODUCTS.ID_ORDER);
        public static final ForeignKey<OrdersProductsRecord, ProductsRecord> ORDERS_PRODUCTS_IBFK_2 = Internal.createForeignKey(br.com.kleverton.oliveira.skipthedishes.commons.jooq.Keys.KEY_PRODUCTS_PRIMARY, OrdersProducts.ORDERS_PRODUCTS, "orders_products_ibfk_2", OrdersProducts.ORDERS_PRODUCTS.ID_PRODUCT);
        public static final ForeignKey<ProductsRecord, RestaurantsRecord> PRODUCTS_IBFK_1 = Internal.createForeignKey(br.com.kleverton.oliveira.skipthedishes.commons.jooq.Keys.KEY_RESTAURANTS_PRIMARY, Products.PRODUCTS, "products_ibfk_1", Products.PRODUCTS.ID_RESTAURANT);
    }
}
